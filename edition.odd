<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns:pb="http://teipublisher.com/1.0" xmlns="http://www.tei-c.org/ns/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Normalized edition                    
                    
                  <desc>For StFX Digital Methods course</desc>
                </title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under
                        GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions
                        GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify it under
                        the terms of the GNU General Public License as published by the Free
                        Software Foundation, either version 3 of the License, or (at your option)
                        any later version.</p>
                    <p>This program is distributed in the hope that it will be useful, but WITHOUT
                        ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
                        FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
                        more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl/>
        </encodingDesc>
        <revisionDesc>
            <change when="2024-11-15Z">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="Q" source="teipublisher.odd">
                <elementSpec ident="lb" mode="change">
                    <model behaviour="omit"/>
                </elementSpec>
                <elementSpec ident="ab" mode="change">
                    <modelSequence>
            <model behaviour="inline">
                <param name="content" value="substring-after(@n, 'V')"/>
                <outputRendition xml:space="preserve">
                color: green; vertical-align: super; font-size: smaller;
                </outputRendition>
            </model>
            <model behaviour="inline"/>
        </modelSequence>
                </elementSpec>
                <elementSpec ident="w" mode="change">
                    <model output="web" predicate="@lemma" behaviour="alternate">
            <desc>Set this alternate:=concat(@lemma," ",@msd) to display the lemma and msd on hover; set its alternate to blank for output as print CSS</desc>
            <param name="alternate" value="concat(@lemma,&#34; &#34;,@msd)"/>
            <param name="default" value="."/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                    <model behaviour="text">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="pb" mode="change">
                    <model behaviour="omit"/>
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model>
                </elementSpec>
                <elementSpec ident="div" mode="change">
                    <modelSequence predicate="  @type='textpart' and substring-after(@n,'K')">
            <desc>Chapter</desc>
            <model behaviour="inline">
                <desc>Chapter number</desc>
                <param name="content" value="substring-after(@n,'K')"/>
                <outputRendition xml:space="preserve">
                color: green; font-size: larger;
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: ".";
                </outputRendition>
            </model>
            <model behaviour="inline">
                <desc>Chapter text</desc>
                <outputRendition xml:space="preserve">
                font-family: 'Times New Roman', serif;
                </outputRendition>
            </model>
        </modelSequence>
                    <model predicate="@type='title_page'" behaviour="block">
            <outputRendition xml:space="preserve">
            border: 1px solid black; padding: 5px;
            </outputRendition>
        </model>
                    <model predicate="parent::body or parent::front or parent::back" behaviour="section"/>
                    <model behaviour="block">
            <outputRendition xml:space="preserve">
            null
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="title" mode="change">
                    <model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="2"/>
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model>
                    <modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' â€” '"/>
            </model>
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                color: blue;
                </outputRendition>
            </model>
        </modelSequence>
                    <model predicate="not(@level) and parent::bibl" behaviour="inline"/>
                    <modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence>
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="hi" mode="change">
                    <model predicate="@rend='overline'" behaviour="inline" useSourceRendition="true">
            <desc>overline</desc>
            <outputRendition xml:space="preserve">
            text-decoration: overline;
            </outputRendition>
        </model>
                    <model behaviour="inline" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="body" mode="change"/>
                <elementSpec ident="cb" mode="change">
                    <model behaviour="omit"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>